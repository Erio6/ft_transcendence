upstream django {
    server web:8000;
}

server {
    listen 80;
    server_name localhost;

	access_log /dev/null;
	error_log /dev/null crit;
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name localhost;

    # Paths to the self-signed certificate and key
    ssl_certificate /etc/nginx/certs/selfsigned.crt;
    ssl_certificate_key /etc/nginx/certs/selfsigned.key;

    # SSL settings (you can enable these if you have a CA-signed cert)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_stapling off;  # Disable SSL stapling if you're using a self-signed certificate

    # Disable access log
    access_log off;

    # Disable error log
    error_log /dev/null crit;

    # Enable ModSecurity
    modsecurity on;
    modsecurity_rules_file /etc/modsecurity.d/custom-modsecurity.conf;

    # Proxy pass all requests to Django
    location / {
        proxy_pass http://django;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket connections
    location /ws/ {
        proxy_pass http://django;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static files - Ensure there's only one alias for /static/
    location /static/ {
        alias /app/staticfiles/;
    }
}
